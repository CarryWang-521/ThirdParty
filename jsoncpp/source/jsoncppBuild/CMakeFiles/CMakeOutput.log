The system is: Windows - 10.0.19042 - AMD64
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

生成启动时间为 2022/10/6 18:49:56。
节点 1 上的项目“E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\3.24.2\CompilerIdCXX\CompilerIdCXX.vcxproj”(默认目标)。
PrepareForBuild:
  正在创建目录“Debug\”。
  正在创建目录“Debug\CompilerIdCXX.tlog\”。
InitializeBuildStatus:
  正在创建“Debug\CompilerIdCXX.tlog\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
ClCompile:
  D:\Install\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.31.31103\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  D:\Install\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.31.31103\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\3.24.2\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=D:\Install\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.31.31103\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  正在删除文件“Debug\CompilerIdCXX.tlog\unsuccessfulbuild”。
  正在对“Debug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate”执行 Touch 任务。
已完成生成项目“E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\3.24.2\CompilerIdCXX\CompilerIdCXX.vcxproj”(默认目标)的操作。

已成功生成。
    0 个警告
    0 个错误

已用时间 00:00:01.18


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

The CXX compiler identification is MSVC, found in "E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/3.24.2/CompilerIdCXX/CompilerIdCXX.exe"

Detecting CXX compiler ABI info compiled with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_0c159.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  CMakeCXXCompilerABI.cpp
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_0c159.dir\Debug\\" /Fd"cmTC_0c159.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "D:\Install\Program Files\CMake\share\cmake-3.24\Modules\CMakeCXXCompilerABI.cpp"
  cmTC_0c159.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_0c159.exe



Determining if the include file clocale exists passed with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_3265f.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  CheckIncludeFile.cxx
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_3265f.dir\Debug\\" /Fd"cmTC_3265f.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\CheckIncludeFile.cxx"
  cmTC_3265f.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_3265f.exe



Determining if the localeconv exist passed with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_a0452.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  CheckSymbolExists.cxx
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_a0452.dir\Debug\\" /Fd"cmTC_a0452.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\CheckSymbolExists.cxx"
  cmTC_a0452.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_a0452.exe


File E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <clocale>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef localeconv
  return ((int*)(&localeconv))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the include file sys/types.h exists passed with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_f0d2f.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  CheckIncludeFile.cxx
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_f0d2f.dir\Debug\\" /Fd"cmTC_f0d2f.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\CheckIncludeFile.cxx"
  cmTC_f0d2f.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_f0d2f.exe



Determining if the include file stdint.h exists passed with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_c9051.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  CheckIncludeFile.cxx
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_c9051.dir\Debug\\" /Fd"cmTC_c9051.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\CheckIncludeFile.cxx"
  cmTC_c9051.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_c9051.exe



Determining if the include file stddef.h exists passed with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_ca44d.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  CheckIncludeFile.cxx
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_ca44d.dir\Debug\\" /Fd"cmTC_ca44d.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\CheckIncludeFile.cxx"
  cmTC_ca44d.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_ca44d.exe



Determining size of lconv passed with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_39086.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  LCONV_SIZE.cpp
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_39086.dir\Debug\\" /Fd"cmTC_39086.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CheckTypeSize\LCONV_SIZE.cpp"
  cmTC_39086.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_39086.exe



Performing C++ SOURCE FILE Test HAVE_DECIMAL_POINT succeeded with the following output:
Change Dir: E:/0. WorkSpace/Third-Party/jsoncpp/source/jsoncppBuild/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Install/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_34dcf.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 17.1.0+ae57d105c
版权所有(C) Microsoft Corporation。保留所有权利。

  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31107 版
  src.cxx
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D HAVE_DECIMAL_POINT /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_34dcf.dir\Debug\\" /Fd"cmTC_34dcf.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue "E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\src.cxx"
  cmTC_34dcf.vcxproj -> E:\0. WorkSpace\Third-Party\jsoncpp\source\jsoncppBuild\CMakeFiles\CMakeTmp\Debug\cmTC_34dcf.exe


Source file was:

#include <clocale>

int main()
{
  (void)sizeof(((lconv *)0)->decimal_point);
  return 0;
}

